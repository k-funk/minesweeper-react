// Use this file as a starting point for your project's .eslintrc.
// Copy this file, and add rule overrides as needed.
{
  "parser": "babel-eslint",
  "extends": [
    "airbnb",
    "plugin:jest/recommended",
    "plugin:jest/style"
  ],

  "env": {
    "jest": true,
    "browser": true,
  },

  "settings": {
    "import/resolver": {
      "webpack": {
        "config": "webpack/webpack.config.dev.js"
      }
    },
    "import/extensions": ["", ".js", ".ejs", ".json", ".yml", ".jsx"],
    "import/ignore": [".ejs$", ".yml$", ".jsx"]
  },

  "plugins": [
    "jest",
  ],

  "rules": {
    "import/extensions": ["error", "always", {
      "js": "never",
      "ejs": "never",
      "jsx": "never",
    }],
    "import/no-extraneous-dependencies": [
      "error", {
        "devDependencies": ["**/*.test.js", "**/*.test.jsx"]
      }
    ],
    "import/order": ["error",  {
      "newlines-between": "ignore",
      "groups":  [
        "builtin",
        "external",
        ["sibling", "parent", "internal"], // They can be mingled together
        "index"
      ]
    }],
    "import/newline-after-import": ["error", { "count": 2 }],

    "react/jsx-one-expression-per-line": 0, // https://github.com/yannickcr/eslint-plugin-react/issues/1848
    "react/static-property-placement": ["error", "static public field"],
    "react/forbid-prop-types": ["error", { "forbid": ["any"] }],
    "react/require-default-props": 0,
    "react/jsx-props-no-spreading": 0,

    "new-cap": ["error", {
      "capIsNewExceptions": ["Event"],
      "newIsCapExceptions": ["this.model"]
    }],
    "no-underscore-dangle": 0,
    "consistent-return": 0,
    "no-mixed-operators": ["error", { "allowSamePrecedence": true }],
    "no-param-reassign": 0,
    "arrow-parens": ["error", "as-needed"],
    "object-curly-newline": ["error", {
      "ObjectExpression": { "multiline": true, "consistent": true },
      "ObjectPattern": { "multiline": true, "consistent": true }
    }],
    "quotes": ["error", "single",  { "allowTemplateLiterals": true }],
    "no-console": ["error", { "allow": ["error"] }],
    "lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": true }
    ],
    "operator-linebreak": ["error", "after"],
    "no-multiple-empty-lines": ["error", { "max": 2, "maxBOF": 1, "maxEOF": 0 }],

    "jest/consistent-test-it": ["error", {"fn": "test"}],
    "jest/expect-expect": 0, // incompatible with doing an expect in afterEach
    "jest/no-standalone-expect": 0, // incompatible with doing an expect in afterEach
  },

  "globals": {
    "google": true,
  }
}
